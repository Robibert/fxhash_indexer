# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Dict, List

from pydantic import BaseModel, Extra


class Ledger(BaseModel):
    class Config:
        extra = Extra.forbid

    author: str
    balance: str
    enabled: bool
    locked_seconds: str
    metadata: str
    original_supply: str
    price: str
    royalties: str
    supply: str
    timestamp_minted: str


class UserActions(BaseModel):
    class Config:
        extra = Extra.forbid

    last_issuer_minted: str
    last_issuer_minted_time: str
    last_minted: List[str]
    last_minted_time: str


class GentkMinterV2Storage(BaseModel):
    class Config:
        extra = Extra.forbid

    administrator: str
    all_gentk_tokens: str
    all_tokens: str
    allowed_mint_contract: str
    allowed_mint_issuer_contract: str
    fees: str
    gentk_void_metadata: str
    ledger: Dict[str, Ledger]
    lock_time: str
    metadata: Dict[str, str]
    min_price: str
    objkt_contract: str
    paused: bool
    seed_mode: bool
    treasury_address: str
    user_actions: Dict[str, UserActions]
    user_moderation_contract: str
